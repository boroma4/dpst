{"version":3,"sources":["utils/CodeExecution.ts","utils/TreeBuilding.ts","icon.png","components/Header/Header.tsx","components/Footer/Footer.tsx","hooks/useWindowSize.ts","components/CodeEditor/CodeEditor.tsx","utils/TranslationRequest.ts","utils/InputProcessing.ts","templates/templates.ts","templates/fibonacci.ts","templates/lcs.ts","templates/custom.ts","components/InputColumn/InputColumn.tsx","containers/VisualizerPage/VisualizerPage.tsx","containers/TheoryPage/TheoryBank.ts","containers/TheoryPage/TheoryPage.tsx","containers/HomePage/HomePage.tsx","containers/ErrorPage/ErrorPage.tsx","components/VisualizerComponents/data.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["executeAndGetTree","fnData","useMemo","highlightOverlaps","fn","_","userFn","eval","parseFunction","self","this","callStack","parents","memo","nodes","run","args","currentKey","JSON","stringify","parent","length","undefined","nodeValue","Object","keys","key","node","push","Error","result","apply","pop","NaN","paramsValues","params","map","param","value","buildRecursionTree","vars","variables","name","join","varsDeclaration","paramsNames","body","parentsObject","id","pathProps","children","gProps","className","hasDuplicates","currentChildren","findChildrenIds","childId","childNode","res","Number","count","useStyles","makeStyles","theme","createStyles","root","flexGrow","height","bar","backgroundColor","zIndex","drawer","logo","cursor","option","marginLeft","spacing","transition","opacity","Header","classes","history","useHistory","AppBar","position","Toolbar","variant","src","width","alt","onClick","Typography","color","footer","palette","background","default","padding","bottom","Footer","Container","maxWidth","align","Date","getFullYear","style","href","useWindowSize","useState","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","language","input","setInput","placeholder","mode","onChange","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","API","requestPythonToJs","code","a","fetch","method","headers","rawResponse","json","legalSymbols","inputCode","inputCall","functionName","substring","indexOf","replace","includes","response","symbol","replaceMathFunctions","group","fnCode","fnCall","fnVars","betweenParentesis","paramName","i","lastIndexOf","filter","ungroup","lang","var1","var2","s","content","split","wrong","correct","getKeyValue","obj","Templates","margin","textAlign","runForm","marginTop","formControl","minWidth","error","setRecursionTree","template","setTemplate","call","setCall","setLanguage","setError","setUseMemo","setHighlightOverlaps","isRunning","setIsRunning","compileInput","then","func","tree","catch","e","console","log","message","FormControl","InputLabel","Select","target","MenuItem","templateName","FormControlLabel","control","Switch","checked","label","CodeEditor","FormGroup","row","htmlFor","OutlinedInput","type","Boolean","endAdornment","InputAdornment","IconButton","aria-label","disabled","edge","paper","text","secondary","codeColBckg","borderRight","codeCol","overflowY","VisualizerPage","props","data","setData","Grid","container","item","xs","md","InputColumn","textProps","dy","nodeProps","r","keyProp","animated","topics","TheoryBank","display","flexShrink","drawerPaper","drawerContainer","overflow","TheoryPage","chosenPage","setChosenPage","Drawer","List","index","ListItem","button","ListItemText","primary","paragraph","Button","size","App","path","exact","ErrorPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10ed2f76.chunk.js","sourcesContent":["import {FunctionData} from \"../types/types\";\r\nimport {buildRecursionTree} from \"./TreeBuilding\";\r\nimport {TreeNode} from \"../containers/VisualizerPage/Types/TreeNode\";\r\n\r\n\r\nexport function executeAndGetTree(this:any, fnData: FunctionData, useMemo: boolean, highlightOverlaps: boolean): TreeNode{\r\n\r\n    // pure magic\r\n    var fn: Function, _: Function;\r\n    // eslint-disable-next-line\r\n    const userFn: Function = eval(parseFunction(fnData));\r\n    const self = this;\r\n    const callStack: number[] = [];\r\n    const parents: any = {};\r\n    const memo: any = {};\r\n    let nodes = 0;\r\n\r\n    function run(...args: any[]): any{\r\n        const currentKey = JSON.stringify(args);\r\n        parents[nodes] = {\r\n            parent: callStack.length > 0 ? callStack[callStack.length - 1] : undefined,\r\n            nodeValue: currentKey\r\n        };\r\n\r\n        if(useMemo && memo[currentKey]){\r\n            for (let key of Object.keys(parents)){\r\n                let node = parents[key];\r\n                if(node.nodeValue === currentKey){\r\n                    node.nodeValue += `=>${memo[currentKey]}`\r\n                }\r\n            }\r\n            return memo[currentKey]\r\n        }\r\n\r\n        callStack.push(nodes++);\r\n\r\n        if(nodes > 150){\r\n            throw new Error('Recursion too deep!');\r\n        }\r\n\r\n        const result = userFn.apply(self, args);\r\n\r\n        for (let key of Object.keys(parents)){\r\n            let node = parents[key];\r\n            if(node.nodeValue === currentKey){\r\n                node.nodeValue += `=>${result}`\r\n            }\r\n        }\r\n\r\n        if(useMemo){\r\n            memo[currentKey] = result;\r\n        }\r\n\r\n        callStack.pop();\r\n        return result;\r\n    }\r\n\r\n    fn = run;\r\n    let result = NaN;\r\n    // eslint-disable-next-line\r\n    const paramsValues = fnData.params.map((param) => eval(param.value));\r\n    if (paramsValues.length > 0) result = fn(...paramsValues);\r\n\r\n    return buildRecursionTree(parents, highlightOverlaps);\r\n}\r\n\r\n\r\nconst parseFunction = (fnData: FunctionData) => {\r\n    const vars = fnData.variables\r\n        ?.map((param) => `${param.name} = ${param.value}`)\r\n        .join(', ');\r\n    const varsDeclaration = (vars && `var ${vars};`) || '';\r\n\r\n    const paramsNames = fnData.params.map((param) => param.name).join(', ');\r\n\r\n    const fnDeclaration = `_ = function (${paramsNames}) {\r\n    ${varsDeclaration}\r\n    ${fnData.body}\r\n  }`;\r\n\r\n    return fnDeclaration\r\n};\r\n\r\n","import {TreeNode} from \"../containers/VisualizerPage/Types/TreeNode\";\r\n\r\nexport const buildRecursionTree = (parentsObject: any, highlightOverlaps:boolean, id: number = 0) => {\r\n    const node: TreeNode = {\r\n        name: parentsObject[id].nodeValue,\r\n        pathProps:'',\r\n        children:[],\r\n        gProps: {\r\n            className: highlightOverlaps && hasDuplicates(parentsObject, id) ? 'red-node' : '',\r\n        }\r\n    };\r\n    let currentChildren = findChildrenIds(parentsObject, id);\r\n\r\n    for (let childId of currentChildren){\r\n        const childNode = buildRecursionTree(parentsObject, highlightOverlaps, childId);\r\n        node.children.push(childNode)\r\n    }\r\n    return node;\r\n};\r\n\r\nconst findChildrenIds = (parentsObject: any, parent: number): Array<number> =>{\r\n\r\n    const res: number[] = [];\r\n    for (const key of Object.keys(parentsObject)){\r\n        if(parentsObject[key].parent === parent){\r\n            res.push(Number(key))\r\n        }\r\n    }\r\n    return res;\r\n};\r\n\r\nconst hasDuplicates = (parentsObject: any, parent: number): boolean =>{\r\n\r\n    let count = 0;\r\n    for (const key of Object.keys(parentsObject)){\r\n        if(parentsObject[key].nodeValue === parentsObject[parent].nodeValue){\r\n            count++;\r\n        }\r\n    }\r\n    return count > 1;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/icon.caf5e5a8.png\";","import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport logo from '../../icon.png'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n            height:'48px' // from app bar definition\r\n        },\r\n        bar: {\r\n            backgroundColor: 'azure',\r\n            zIndex: theme.zIndex.drawer + 1\r\n\r\n        },\r\n        logo: {\r\n            '&:hover': {\r\n                cursor: 'pointer',\r\n            }\r\n        },\r\n        option: {\r\n            marginLeft: theme.spacing(4),\r\n            transition: 'all 0.50s',\r\n            '&:hover': {\r\n                cursor: 'pointer',\r\n                opacity: '.5'\r\n            }\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"fixed\" className={classes.bar}>\r\n                <Toolbar variant=\"dense\">\r\n                    <img src={logo} height={50} width={50} alt={'logo'} className={classes.logo} onClick={()=>history.push('/')}/>\r\n                    <Typography variant=\"h6\" color=\"primary\" className={classes.option} onClick={()=>history.push('/theory')}>\r\n                        Theory\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" color=\"primary\" className={classes.option} onClick={()=>history.push('/visualizer')}>\r\n                        Visualizer\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    footer: {\r\n        backgroundColor: theme.palette.background.default,\r\n        // marginTop: theme.spacing(8),\r\n        padding: theme.spacing(2, 0),\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        width: '100%',\r\n        height: '2vh'\r\n    },\r\n}));\r\n\r\nexport default function Footer() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <footer className={classes.footer}>\r\n            <Container maxWidth=\"lg\">\r\n                <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                    {'Copyright © '}\r\n                    {'Smart kids Inc.'}\r\n                    {new Date().getFullYear()}\r\n                    {'.  '}\r\n                    <a style={{color:'gray'}} href={'https://github.com/boroma4/dpst'}>Github</a>\r\n                </Typography>\r\n            </Container>\r\n        </footer>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\ninterface WindowSize {\r\n    width: number;\r\n    height: number;\r\n}\r\n// Hook\r\nexport function useWindowSize() {\r\n    // Initialize state with undefined width/height so server and client renders match\r\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n    const [windowSize, setWindowSize] = useState<WindowSize>({\r\n        width: 1000,\r\n        height: 1000,\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Handler to call on window resize\r\n        function handleResize() {\r\n            // Set window width/height to state\r\n            setWindowSize({\r\n                width: window.innerWidth,\r\n                height: window.innerHeight,\r\n            });\r\n        }\r\n\r\n        // Add event listener\r\n        window.addEventListener(\"resize\", handleResize);\r\n\r\n        // Call handler right away so state gets updated with initial window size\r\n        handleResize();\r\n\r\n        // Remove event listener on cleanup\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []); // Empty array ensures that effect is only run on mount\r\n\r\n    return windowSize;\r\n}\r\n","import React from \"react\";\r\nimport AceEditor from \"react-ace\";\r\n\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/mode-python\";\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\nimport {LangName} from \"../../types/types\";\r\nimport {useWindowSize} from \"../../hooks/useWindowSize\";\r\n\r\n\r\n\r\ninterface Props{\r\n    language: LangName;\r\n    input: string;\r\n    setInput: (value: string, event?: any) => void;\r\n}\r\n\r\nexport default function ({language, input, setInput}: Props) {\r\n\r\n    const windowSize = useWindowSize();\r\n\r\n    return(\r\n        <>\r\n            <AceEditor\r\n                style={{width:'auto', height: windowSize.height * 0.45}}\r\n                placeholder=\"Write some code\"\r\n                mode={language}\r\n                theme=\"monokai\"\r\n                onChange={setInput}\r\n                fontSize={14}\r\n                showPrintMargin={true}\r\n                showGutter={true}\r\n                highlightActiveLine={true}\r\n                value={input}\r\n                setOptions={{\r\n                    enableBasicAutocompletion: false,\r\n                    enableLiveAutocompletion: true,\r\n                    enableSnippets: false,\r\n                    showLineNumbers: true,\r\n                    tabSize: 2,\r\n                }}/>\r\n        </>\r\n    )\r\n}\r\n\r\n","const API = 'https://gentle-hamlet-64638.herokuapp.com/';\r\n\r\nexport interface TranslationData {\r\n    fn: string;\r\n}\r\nexport async function requestPythonToJs(code: string): Promise<TranslationData> {\r\n    const rawResponse = await fetch(API, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({fn: code})\r\n    });\r\n\r\n    return await rawResponse.json();\r\n}\r\n","import {FunctionData, LangName, Variable} from \"../types/types\";\r\nimport {requestPythonToJs} from \"./TranslationRequest\";\r\n\r\nconst legalSymbols = [' ', '+', '-', '(', '*'];\r\n\r\nexport async function compileInput(inputCode: string, inputCall: string, language: LangName): Promise<FunctionData> {\r\n\r\n    if(language === 'javascript'){\r\n        let functionName = inputCode.substring(inputCode.indexOf('function') + 'function'.length + 1, inputCode.indexOf('('));\r\n        functionName = ` ${functionName}(`;\r\n        inputCall = inputCall.replace(functionName, ' fn(');\r\n\r\n        while(inputCode.includes(functionName) && functionName !== ' fn('){\r\n            inputCode = inputCode.replace(functionName, ' fn(');\r\n        }\r\n    }else if(language === 'python'){\r\n        let functionName = inputCode.substring(inputCode.indexOf('def') + 'def'.length + 1, inputCode.indexOf('('));\r\n        functionName = ` ${functionName}:`;\r\n        inputCall = inputCall.replace(functionName, ' fn:');\r\n\r\n        while(inputCode.includes(functionName) && functionName !== ' fn:'){\r\n            inputCode = inputCode.replace(functionName, ' fn:');\r\n        }\r\n        const response = await requestPythonToJs(inputCode);\r\n        inputCode = response.fn;\r\n\r\n        for (const symbol of legalSymbols){\r\n            inputCode = replaceMathFunctions(inputCode, `${symbol}min(`, `${symbol}Math.min(...`);\r\n            inputCode = replaceMathFunctions(inputCode, `${symbol}max(`, `${symbol}Math.max(...`);\r\n        }\r\n    }\r\n\r\n    return group(inputCode, inputCall, []);\r\n}\r\n\r\n\r\nexport const group = (\r\n    fnCode: string,\r\n    fnCall: string,\r\n    fnVars: Variable[]\r\n): FunctionData => {\r\n    const paramsNames = betweenParentesis(fnCode);\r\n    const paramsValues = betweenParentesis(fnCall);\r\n\r\n    if (paramsNames.length !== paramsValues.length)\r\n        throw new Error('Incorrect params values');\r\n\r\n    const params = paramsNames.map((paramName, i) => ({\r\n        name: paramName,\r\n        value: paramsValues[i],\r\n    }));\r\n    const body = fnCode.substring(\r\n        fnCode.indexOf('{') + 1,\r\n        fnCode.lastIndexOf('}')\r\n    );\r\n    const variables = fnVars.filter(\r\n        ({ name, value }) => name !== '' && value !== ''\r\n    );\r\n\r\n    return { params, body, variables }\r\n};\r\n\r\nexport const ungroup = (fnData: FunctionData, lang: LangName) => {\r\n    const { params, body, variables } = fnData;\r\n\r\n    const paramsNames = params.map(({ name }) => name).join(',');\r\n    const paramsValues = params.map(({ value }) => value).join(',');\r\n\r\n    const var1 = variables && variables[0];\r\n    const var2 = variables && variables[1];\r\n\r\n    if(lang === 'python'){\r\n        return {\r\n            fnCode: `def fn(${paramsNames}): \\n${body}\\n`,\r\n            fnCall: `fn(${paramsValues})`,\r\n            fnVars: [\r\n                { name: var1?.name || '', value: var1?.value || '' },\r\n                { name: var2?.name || '', value: var2?.value || '' },\r\n            ],\r\n        }\r\n    }\r\n\r\n    return {\r\n        fnCode: `function fn(${paramsNames}) {\\n${body}\\n}`,\r\n        fnCall: `fn(${paramsValues})`,\r\n        fnVars: [\r\n            { name: var1?.name || '', value: var1?.value || '' },\r\n            { name: var2?.name || '', value: var2?.value || '' },\r\n        ],\r\n    }\r\n};\r\n\r\nconst betweenParentesis = (s: string) => {\r\n    const content = s.substring(s.indexOf('(') + 1, s.indexOf(')'));\r\n    return content === '' ? [] : content.split(',')\r\n};\r\n\r\nconst replaceMathFunctions = (code: string, wrong: string, correct: string) =>{\r\n    while(code.includes(wrong)){\r\n        code = code.replace(wrong, correct);\r\n    }\r\n    return code;\r\n};\r\n","import {Fibonacci} from \"./fibonacci\";\r\nimport {Custom} from \"./custom\";\r\nimport {LCS} from \"./lcs\";\r\n\r\nexport const getKeyValue = (key: string) => (obj: Record<string, any>) => obj[key];\r\n\r\nexport const Templates = {\r\n  'Fibonacci': Fibonacci,\r\n  'LCS':LCS,\r\n  'Custom': Custom\r\n};\r\n","import {ExampleTemplate} from \"../types/types\";\r\n\r\nexport const Fibonacci: ExampleTemplate = {\r\n    'javascript':{\r\n        params: [{name:'n', value: '5'}],\r\n        body: ` \r\n  if(n < 2) return n;\r\n        \r\n  return fn(n-1) + fn(n-2);     \r\n`\r\n    },\r\n    'python':{\r\n        params: [{name:'n', value: '5'}],\r\n        body: ` \r\n  if n < 2: \r\n    return n\r\n        \r\n  return fn(n-1) + fn(n-2)     \r\n`\r\n    }\r\n};\r\n","import {ExampleTemplate} from \"../types/types\";\r\n\r\nexport const LCS: ExampleTemplate = {\r\n    'javascript':{\r\n        params: [{name:'str1', value: '\\\"dab\\\"'},{name:'str2', value: '\\\"cb\\\"'},{name:'i', value: '3'},{name:'j', value: '2'},{name:'count',value:'0'}],\r\n        body: ` \r\n\\t\\tif (i <= 0 || j <= 0)\r\n\\t\\t\\treturn count;\r\n\\t\\t\r\n\\t\\tlet count1=count;\r\n\\t\\tif (str1[i - 1] === str2[j - 1])\r\n\\t\\t\\tcount1 = fn(str1, str2, i - 1, j - 1, count + 1);\r\n\r\n\\t\\tconst count2 = fn(str1, str2, i, j - 1, 0);\r\n\\t\\tconst count3 = fn(str1, str2, i - 1, j, 0);\r\n\r\n\\t\\treturn Math.max(count1, Math.max(count2, count3));\r\n`\r\n    },\r\n    'python':{\r\n        params: [{name:'str1', value: '\\\"dab\\\"'},{name:'str2', value: '\\\"ab\\\"'},{name:'i', value: '3'},{name:'j', value: '2'},{name:'count',value:'0'}],\r\n        body: ` \r\n\\t\\tif i <= 0 or j <= 0:\r\n\\t\\t\\treturn count\r\n\\t\\t\r\n\\t\\tcount1=count\r\n\\t\\tif str1[i - 1] == str2[j - 1] :\r\n\\t\\t\\tcount1 = fn(str1, str2, i - 1, j - 1, count + 1)\r\n\r\n\\t\\tcount2 = fn(str1, str2, i, j - 1, 0)\r\n\\t\\tcount3 = fn(str1, str2, i - 1, j, 0)\r\n\r\n\\t\\treturn max([count1, count2, count3])\r\n`\r\n    }\r\n};\r\n","import {ExampleTemplate} from \"../types/types\";\r\n\r\nexport const Custom: ExampleTemplate = {\r\n    'javascript':{\r\n        params: [{name:'n', value: '5'}],\r\n        body: ` \r\n  return n;     \r\n`\r\n    },\r\n    'python':{\r\n        params: [{name:'n', value: '5'}],\r\n        body: ` \r\n  return n    \r\n`\r\n    }\r\n};\r\n","import React, {useState} from \"react\";\r\nimport CodeEditor from \"../CodeEditor/CodeEditor\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {createStyles, Theme} from \"@material-ui/core\";\r\nimport {LangName, TemplateName} from \"../../types/types\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport {compileInput, ungroup} from \"../../utils/InputProcessing\";\r\nimport {executeAndGetTree} from \"../../utils/CodeExecution\";\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {getKeyValue, Templates} from \"../../templates/templates\";\r\n\r\ninterface Props {\r\n    setRecursionTree: Function;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            margin:'5px',\r\n            textAlign:'left',\r\n        },\r\n        runForm: {\r\n            marginTop: '10px',\r\n            marginLeft: '5px',\r\n        },\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 120,\r\n        },\r\n        error: {\r\n            color: 'red',\r\n            fontSize: 'small'\r\n        }\r\n    }),\r\n);\r\n\r\nconst {fnCode, fnCall} = ungroup(Templates['Fibonacci']['javascript'], 'javascript');\r\n\r\n\r\nexport default function ({setRecursionTree}: Props) {\r\n    const classes = useStyles();\r\n\r\n    const [template, setTemplate] = useState<TemplateName>('Fibonacci');\r\n    const [input, setInput] = useState<string>(fnCode);\r\n    const [call, setCall] = useState<string>(fnCall);\r\n    const [language, setLanguage] = useState<LangName>('javascript');\r\n    const [error, setError] = useState<string>('');\r\n    const [useMemo, setUseMemo] = useState<boolean>(false);\r\n    const [highlightOverlaps, setHighlightOverlaps] = useState<boolean>(false);\r\n    const [isRunning, setIsRunning] = useState<boolean>(false);\r\n\r\n    const updateTemplate = (e:React.ChangeEvent<{ value: unknown }>) =>{\r\n      const templateName: TemplateName = e.target.value as TemplateName;\r\n      const {fnCode, fnCall} = ungroup(getKeyValue(templateName)(Templates)[language], language);\r\n      setInput(fnCode);\r\n      setCall(fnCall);\r\n      setTemplate(templateName);\r\n    };\r\n\r\n    const updateLanguage = (e:React.ChangeEvent<{ value: unknown }>) =>{\r\n        const language: LangName = e.target.value as LangName;\r\n        const {fnCode, fnCall} = ungroup(getKeyValue(template)(Templates)[language], language);\r\n        setLanguage(language);\r\n        setInput(fnCode);\r\n        setCall(fnCall);\r\n    };\r\n\r\n    const run = () =>{\r\n        if(isRunning) return;\r\n        setIsRunning(true);\r\n\r\n        compileInput(input, call, language)\r\n            .then(func => executeAndGetTree(func, useMemo, highlightOverlaps))\r\n            .then(tree => {\r\n                setRecursionTree(tree);\r\n                setError('');\r\n                setIsRunning(false);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                setError('Execution failed!');\r\n                setIsRunning(false);\r\n                if(e.message.includes('deep')){\r\n                    setError('Too many recursive calls!');\r\n                }\r\n                if(e.message.includes('not defined')){\r\n                    setError('Unsupported syntax was used!');\r\n                }\r\n            });\r\n    };\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <FormControl variant=\"filled\" className={classes.formControl}>\r\n                <InputLabel id=\"ek\">Language</InputLabel>\r\n                <Select\r\n                    value={language}\r\n                    onChange={updateLanguage}\r\n                >\r\n                    <MenuItem value={'javascript'}>Javascript</MenuItem>\r\n                    <MenuItem value={'python'}>Python</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl variant=\"filled\" className={classes.formControl}>\r\n                <InputLabel id=\"pk\" style={{marginTop:'5px'}}>Template</InputLabel>\r\n                <Select\r\n                    value={template}\r\n                    onChange={updateTemplate}\r\n                >\r\n                    <MenuItem value={'Fibonacci'}>Fibonacci</MenuItem>\r\n                    <MenuItem value={'LCS'}>LCS</MenuItem>\r\n                    <MenuItem value={'Custom'}>Custom</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl variant=\"filled\" className={classes.formControl}>\r\n                <FormControlLabel\r\n                    control={<Switch checked={useMemo} onChange={()=>setUseMemo(!useMemo)} name=\"checkedA\" />}\r\n                    label=\"Use Memoization\"\r\n                />\r\n                <FormControlLabel\r\n                    control={<Switch checked={highlightOverlaps} onChange={()=>setHighlightOverlaps(!highlightOverlaps)} name=\"checkssedA\" />}\r\n                    label=\"Highlight overlapping calls\"\r\n                />\r\n            </FormControl>\r\n            <CodeEditor\r\n                language={language}\r\n                input={input}\r\n                setInput={setInput}\r\n            />\r\n            <FormGroup row className={classes.runForm}>\r\n                <InputLabel htmlFor=\"function-call\">Function call</InputLabel>\r\n                <OutlinedInput\r\n                    id=\"function-call\"\r\n                    type={'text'}\r\n                    value={call}\r\n                    onChange={(e)=>setCall(e.target.value)}\r\n                    error={Boolean(error)}\r\n                    endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                                aria-label=\"toggle password visibility\"\r\n                                onClick={()=>run()}\r\n                                disabled={isRunning}\r\n                                edge=\"end\"\r\n                            >\r\n                                <PlayCircleFilledIcon/>\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    }\r\n                    />\r\n                <div className={classes.error}>{error}</div>\r\n            </FormGroup>\r\n        </div>\r\n    )\r\n}\r\n","import React, {FunctionComponent, useState} from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {createStyles, Theme} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InputColumn from \"../../components/InputColumn/InputColumn\";\r\nimport Tree from 'react-tree-graph';\r\nimport 'react-tree-graph/dist/style.css'\r\nimport './VisualizerPage.css';\r\nimport {TreeNode} from \"./Types/TreeNode\";\r\nimport {useWindowSize} from \"../../hooks/useWindowSize\";\r\n\r\ninterface Props {\r\n    tree:TreeNode\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        paper: {\r\n            padding: theme.spacing(2),\r\n            textAlign: 'center',\r\n            color: theme.palette.text.secondary,\r\n        },\r\n        codeColBckg: {\r\n            height: '100%',\r\n            borderRight: 'thick double #32a1ce;'\r\n        },\r\n        codeCol: {\r\n            overflowY:'auto',\r\n            height:'85vh',\r\n        },\r\n    }),\r\n);\r\n\r\n\r\nconst VisualizerPage:FunctionComponent<Props> = (props: Props) => {\r\n    const classes = useStyles();\r\n    const windowSize = useWindowSize();\r\n    const [data, setData] = useState<TreeNode|undefined>(props.tree);\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={5} md={3} className={classes.codeColBckg}>\r\n                    <div className={classes.codeCol}>\r\n                        <InputColumn setRecursionTree={setData}/>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={7} md={3}>\r\n                    <Tree\r\n                        data={data}\r\n                        height={windowSize.height * 0.85}\r\n                        width={windowSize.width * 0.7}\r\n                        textProps={{dy:20}}\r\n                        nodeProps={{r:10}}\r\n                        keyProp={'w'} // hack\r\n                        animated\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default VisualizerPage;\r\n","export default  {\r\n    '1. Problems':[\r\n        \"Pervaya, veri nice stranitsa. Nichego podozritelnogo, prosto tykai paltsami po knopkam)))\"\r\n    ],\r\n    '1.1. Formulation':[\r\n        \"Morbi vel aliquet est. Morbi pretium lorem nec libero viverra, non viverra diam molestie. Nullam gravida dolor scelerisque sapien mollis, vel maximus dui pellentesque. Sed rutrum, purus ut posuere consectetur, dui purus imperdiet velit, nec sodales massa lectus eget metus. Morbi iaculis quam diam, ut laoreet massa dictum nec. Etiam ultrices dui diam, et venenatis erat posuere ut. Nam magna nibh, fermentum a sapien id, eleifend laoreet est. Cras interdum libero non condimentum mollis. Suspendisse bibendum orci tristique nunc ornare, vitae finibus sem interdum. Etiam neque urna, tempus sit amet orci vel, laoreet rutrum justo. In efficitur mi lorem. Phasellus dictum enim sit amet rutrum laoreet. Nam ac iaculis sapien. Maecenas dictum mattis ipsum at semper. Donec semper vehicula magna, vitae sollicitudin est tempus sit amet. Morbi sodales, mauris sit amet condimentum malesuada, massa est commodo metus, eget pellentesque sem lacus ornare magna.\"\r\n    ],\r\n    '1.2. Limitations':[\r\n        \"Mauris faucibus tristique dapibus. Nullam erat nisi, consectetur id dui sit amet, consectetur interdum nisl. Integer lectus enim, gravida ac ultrices id, aliquet in nulla. Cras vulputate viverra urna faucibus tristique. Pellentesque quis fringilla nibh. Integer nec feugiat risus, ut dictum urna. Aenean a rhoncus ex, vel tempor sapien. Sed in diam egestas, auctor urna posuere, tristique libero. Etiam orci odio, ullamcorper a interdum nec, dictum vel lacus. Curabitur dignissim metus mattis nunc efficitur, posuere ultricies neque tincidunt.\"\r\n    ],\r\n    '1.3. Possible Solutions':[\r\n        \"Nunc molestie velit ullamcorper malesuada volutpat. Vestibulum eu dolor risus. Pellentesque id nisi in ipsum pellentesque gravida sit amet vitae enim. Vivamus pretium in elit quis condimentum. In feugiat, felis in euismod tincidunt, leo arcu euismod felis, quis porta eros magna quis neque. Sed semper faucibus massa non commodo. Sed dictum tortor id mi pellentesque bibendum. Proin fringilla purus libero, a posuere diam commodo a. Aliquam eu finibus mi. Cras eget urna sed lectus semper accumsan. Vivamus lacus lectus, porttitor non auctor sed, tristique non elit. Aliquam sagittis elit magna, quis congue ante malesuada at. In pharetra lectus nec lectus ullamcorper imperdiet.\"\r\n    ],\r\n    '2. Recursion':[\r\n        \"Ut euismod vulputate felis. Proin ultricies accumsan consequat. Sed imperdiet, leo eu congue sagittis, sapien velit posuere arcu, nec pharetra arcu elit non sapien. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Etiam accumsan in nulla id posuere. Quisque mattis cursus consectetur. Proin rhoncus euismod ipsum, sit amet consequat sem pharetra eu. Cras convallis tempor erat nec egestas. Donec malesuada facilisis ultricies. Pellentesque vehicula hendrerit aliquam. Nullam eu metus id sapien auctor porttitor. Aenean suscipit mattis aliquet. Aenean sollicitudin arcu ante, a suscipit felis ornare in.\"\r\n    ],\r\n    '2.1. Explanation':[\r\n        \"Nunc egestas sodales lectus non mollis. Integer sed orci gravida, cursus metus id, vestibulum diam. Mauris consectetur tempor orci id facilisis. Phasellus sollicitudin, est quis fermentum lobortis, augue lorem viverra nulla, ac aliquet leo ligula sit amet sem. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Ut congue condimentum quam, eget auctor lorem iaculis pharetra. Morbi vitae nulla congue, laoreet nunc sed, faucibus quam. Mauris laoreet bibendum lorem, at laoreet orci porttitor id. Aenean vehicula vulputate massa, tristique congue massa maximus placerat. Duis aliquam nunc erat, nec placerat ex malesuada vel.\"\r\n    ],\r\n    '2.2. Examples':[\r\n        \"Sed fringilla faucibus semper. Aliquam posuere fringilla magna ut tristique. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Mauris pellentesque elit non augue eleifend tincidunt. Vestibulum suscipit felis augue. Aliquam lorem elit, tempus ac ultricies sit amet, cursus sed nisi. Pellentesque et tellus dui. Aenean egestas risus volutpat est placerat viverra.\"\r\n    ],\r\n    '2.3. Limitations':[\r\n        \"Ut lectus mi, vestibulum pharetra libero eu, finibus tempus neque. In hac habitasse platea dictumst. Duis neque diam, sollicitudin vitae euismod id, lobortis nec eros. Quisque vitae elit eget nisi scelerisque condimentum. Ut enim ipsum, suscipit non egestas ac, pellentesque ut massa. Phasellus tristique turpis sed sapien laoreet luctus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Morbi at quam ut velit lobortis suscipit. Ut congue et dui sit amet consectetur. Quisque rutrum dapibus efficitur. Nullam ac massa sit amet sem tristique imperdiet. Suspendisse luctus auctor elementum.\"\r\n    ],\r\n    '3. Dynamic Programming':[\r\n        \"Interdum et malesuada fames ac ante ipsum primis in faucibus. Curabitur vestibulum a augue volutpat sollicitudin. Vestibulum ac lacinia magna, eget condimentum arcu. Quisque lorem massa, fermentum vel tincidunt vitae, consequat vel ante. Etiam sagittis auctor felis, sit amet hendrerit nisl feugiat porta. Mauris elementum consequat ipsum, et fermentum elit. Aliquam quis tortor ante. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Proin at ante feugiat, blandit nulla non, pulvinar sapien. Donec viverra, eros quis accumsan rutrum, felis erat pharetra orci, at volutpat nunc felis eget lorem. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Integer eget posuere arcu.\"\r\n    ],\r\n    '3.1. Explanation':[\r\n        \"Donec ut pulvinar velit. Pellentesque varius tellus et sem pharetra, at mollis turpis ullamcorper. Nulla vehicula ac odio nec aliquam. Ut nec dolor vel augue consequat ultrices mattis vitae lectus. Phasellus elementum leo lorem, vitae efficitur elit dignissim tempus. Praesent sit amet faucibus leo. Mauris maximus arcu dapibus faucibus scelerisque.\"\r\n    ],\r\n    '3.2. Common uses and examples':[\r\n        \"Donec nec nisi sed est rutrum rutrum eget et lorem. Suspendisse rutrum metus tellus, lobortis pharetra est malesuada eu. Etiam ultrices orci in metus pretium consectetur. Cras vel eros auctor, scelerisque odio vel, placerat purus. Donec interdum pretium lorem, elementum ornare quam. Ut egestas magna at mauris placerat efficitur. Aenean nec lectus non tellus blandit eleifend. Fusce in nibh interdum, lacinia massa at, rhoncus arcu. Etiam et massa vel nibh tristique vehicula. Aenean accumsan consectetur elit, vel varius nibh commodo at. Aenean vitae velit quis purus dictum hendrerit.\"\r\n    ],\r\n    '3.3. Analysis':[\r\n        \"Існує багато варіацій уривків з Lorem Ipsum, але більшість з них зазнала певних змін на кшталт жартівливих вставок або змішування слів, які навіть не виглядають правдоподібно. Якщо ви збираєтесь використовувати Lorem Ipsum, ви маєте упевнитись в тому, що всередині тексту не приховано нічого, що могло б викликати у читача конфуз. Більшість відомих генераторів Lorem Ipsum в Мережі генерують текст шляхом повторення наперед заданих послідовностей Lorem Ipsum. Принципова відмінність цього генератора робить його першим справжнім генератором Lorem Ipsum. Він використовує словник з більш як 200 слів латини та цілий набір моделей речень - це дозволяє генерувати Lorem Ipsum, який виглядає осмислено. Таким чином, згенерований Lorem Ipsum не міститиме повторів, жартів, нехарактерних для латини слів і т.ін.\"\r\n    ]\r\n}\r\n","import React, {FunctionComponent, useState} from 'react';\r\nimport {\r\n    createStyles,\r\n    Drawer,\r\n    List,\r\n    ListItem, ListItemText,\r\n    makeStyles,\r\n    Theme, Toolbar, Typography,\r\n} from \"@material-ui/core\";\r\nimport TheoryBank from \"./TheoryBank\";\r\n\r\n\r\ninterface OwnProps {}\r\n\r\ntype Props = OwnProps;\r\n\r\nconst topics:Array<string> = Object.keys(TheoryBank);\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n        drawerPaper: {\r\n            width: drawerWidth,\r\n        },\r\n        drawerContainer: {\r\n            overflow: 'auto',\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(3),\r\n        },\r\n    }),\r\n);\r\n\r\nconst TheoryPage: FunctionComponent<Props> = (props) => {\r\n    const classes = useStyles();\r\n    const [chosenPage, setChosenPage] = useState<string>('1. Problems');\r\n  return (\r\n      <div className={classes.root} >\r\n          <Drawer\r\n              className={classes.drawer}\r\n              variant=\"permanent\"\r\n              classes={{\r\n                  paper: classes.drawerPaper,\r\n              }}\r\n          >\r\n              <Toolbar />\r\n              <div className={classes.drawerContainer}>\r\n                  <List>\r\n                      {topics.map((text, index) => (\r\n                          <ListItem button key={text} onClick={()=>{console.log(index);setChosenPage(text)}}>\r\n                              <ListItemText primary={text} />\r\n                          </ListItem>\r\n                      ))}\r\n                  </List>\r\n\r\n              </div>\r\n          </Drawer>\r\n          <main className={classes.content}>\r\n              <Toolbar />\r\n              <Typography paragraph>\r\n                  {(TheoryBank as any)[chosenPage]}\r\n              </Typography>\r\n          </main>\r\n  </div>);\r\n};\r\n\r\nexport default TheoryPage;\r\n\r\n\r\n","import React from \"react\";\r\nimport './HomePage.css'\r\nimport {Button, Typography} from \"@material-ui/core\";\r\nimport SubdirectoryArrowRightSharpIcon from '@material-ui/icons/SubdirectoryArrowRightSharp';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function () {\r\n    const history = useHistory();\r\n    return(\r\n        <Typography>\r\n            <h1>\r\n                Welcome to self-study guide to Dynamic Programming!\r\n            </h1>\r\n            <h3>\r\n                Here we will teach you all about dynamic programming.\r\n            </h3>\r\n            <Button onClick={()=>history.push('/theory')} variant=\"contained\" color=\"primary\" size=\"large\" style={{padding:20}}>\r\n                <text>Click here to start with Theory</text><SubdirectoryArrowRightSharpIcon style={{margin:5}}/>\r\n            </Button>\r\n           </Typography>\r\n\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\n\r\n\r\nexport default function () {\r\n    return(\r\n        <>\r\n            Error\r\n        </>\r\n    )\r\n}\r\n\r\n","export default {\r\n    name: 'Go ->',\r\n    children: [\r\n        {\r\n            name:\"Your\",\r\n            children:[]\r\n        },\r\n        {\r\n            name:\"function\",\r\n            children:[]\r\n        },\r\n        {\r\n            name:\"can\",\r\n            children:[]\r\n        },\r\n        {\r\n            name:\"be\",\r\n            children:[]\r\n        },\r\n        {\r\n            name:\"displayed\",\r\n            children:[]\r\n        },\r\n        {\r\n            name:\"here\",\r\n            children:[]\r\n        }\r\n    ]\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from \"./components/Header/Header\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport VisualizerPage from \"./containers/VisualizerPage/VisualizerPage\";\r\nimport TheoryPage from \"./containers/TheoryPage/TheoryPage\";\r\nimport HomePage from \"./containers/HomePage/HomePage\";\r\nimport ErrorPage from \"./containers/ErrorPage/ErrorPage\";\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport data from \"./components/VisualizerComponents/data\";\r\nimport {TreeNode} from \"./containers/VisualizerPage/Types/TreeNode\";\r\nimport {Container} from \"@material-ui/core\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n          <Header/>\r\n              <Switch>\r\n                  <Route path=\"/visualizer\" exact={true}>\r\n                      <VisualizerPage  tree={data as unknown as TreeNode}/>\r\n                  </Route>\r\n                  <Route path=\"/theory\" exact={true}>\r\n                      <TheoryPage />\r\n                  </Route>\r\n                  <Route path=\"/\" exact={true}>\r\n                      <HomePage />\r\n                  </Route>\r\n                  <Route>\r\n                      <ErrorPage />\r\n                  </Route>\r\n              </Switch>\r\n          <Footer/>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}